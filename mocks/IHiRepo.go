// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	dto "rest-api/dto"

	mock "github.com/stretchr/testify/mock"
)

// IHiRepo is an autogenerated mock type for the IHiRepo type
type IHiRepo struct {
	mock.Mock
}

// SayHi provides a mock function with given fields:
func (_m *IHiRepo) SayHi() dto.MyMessage {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for SayHi")
	}

	var r0 dto.MyMessage
	if rf, ok := ret.Get(0).(func() dto.MyMessage); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(dto.MyMessage)
	}

	return r0
}

// NewIHiRepo creates a new instance of IHiRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIHiRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *IHiRepo {
	mock := &IHiRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
